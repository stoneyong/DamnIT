// Generated by CoffeeScript 1.7.1
var createCount, createScore, exports;

exports = window.data = {};

createScore = function() {
  return Math.round(Math.random() * 10);
};

createCount = function() {
  return Math.round(Math.random() * 20);
};

exports.getUser = function(userId) {
  var args;
  if (userId) {
    args = {
      uid: userId
    };
  } else {
    args = {};
  }
  return $.getJSON('ajax.ashx?action=loaduser', args).then(function(result) {
    return {
      id: result.UserID,
      name: result.UserName,
      avatar100: result.ImgUrl,
      markedCount: result.TodayCount
    };
  });
};

exports.getScore = function(userID, startDate, endDate) {
  var args;
  args = {
    sdate: startDate,
    edate: endDate
  };
  if (userID) {
    args.uid = userID;
  }
  return $.getJSON('ajax.ashx?action=loadscore', args).then(function(result) {
    var item, otherListObj, selfListObj, _i, _j, _len, _len1, _ref, _ref1;
    selfListObj = {};
    if (result.SelfList) {
      _ref = result.SelfList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (!selfListObj[item.AppraiseDate]) {
          selfListObj[item.AppraiseDate] = {};
        }
        if (item.WorkloadScore) {
          selfListObj[item.AppraiseDate]['workload'] = item.WorkloadScore;
        }
        if (item.WorkEfficiencyScore) {
          selfListObj[item.AppraiseDate]['efficiency'] = item.WorkEfficiencyScore;
        }
        if (item.CooperationScore) {
          selfListObj[item.AppraiseDate]['cooperative'] = item.CooperationScore;
        }
      }
    }
    otherListObj = {};
    if (result.OthersList) {
      _ref1 = result.OthersList;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        item = _ref1[_j];
        if (!otherListObj[item.AppraiseDate]) {
          otherListObj[item.AppraiseDate] = {};
        }
        if (item.WorkloadScore) {
          otherListObj[item.AppraiseDate]['workload'] = item.WorkloadScore;
        }
        if (item.WorkEfficiencyScore) {
          otherListObj[item.AppraiseDate]['efficiency'] = item.WorkEfficiencyScore;
        }
        if (item.CooperationScore) {
          otherListObj[item.AppraiseDate]['cooperative'] = item.CooperationScore;
        }
      }
    }
    return {
      dayCount: result.DayCount,
      selfList: _.map(selfListObj, function(v, k) {
        return {
          date: k,
          score: v
        };
      }),
      otherList: _.map(otherListObj, function(v, k) {
        return {
          date: k,
          score: v
        };
      }),
      workloadCount: result.WorkloadNum || 0,
      efficiencyCount: result.WorkEfficiencyNum || 0,
      cooperativeCount: result.CooperationNum || 0,
      workloadSum: result.SumWorkload || 0,
      efficiencySum: result.SumWorkEfficiency || 0,
      cooperativeSum: result.SumCooperation || 0
    };
  });
};

exports.markUser = function(uid, scores) {
  return $.getJSON('ajax.ashx?action=markuser', $.extend(scores, {
    uid: uid
  }));
};

//# sourceMappingURL=data.map
